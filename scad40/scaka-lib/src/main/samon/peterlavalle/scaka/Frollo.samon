$def(module: Rollo.Module)
cmake_minimum_required(VERSION 3.1.0)

if(WIN32)
	add_definitions(-D_CRT_SECURE_NO_WARNINGS)
else(WIN32)
	set(CMAKE_CXX_FLAGS "$<"${CMAKE_CXX_FLAGS}"> -std=c++11 -std=gnu++11 -static-libstdc++")
	set(CMAKE_EXE_LINKER_FLAGS "$<"${CMAKE_EXE_LINKER_FLAGS}"> -static-libstdc++")
endif(WIN32)

add_definitions(-DCMAKE_BINARY_DIR="$<"${CMAKE_BINARY_DIR}">")
add_definitions(-DCMAKE_SOURCE_DIR="$<"${CMAKE_SOURCE_DIR}">")

$each module.includes
$case include
add_subdirectory(${include})
$end

$each module.directories
$case directory
include_directories(${directory})
$end

$match module.scList.hasMain
$case false
add_library(
	${module.scList.name} OBJECT
$case true
add_executable(
	${module.scList.name}
	# TODO ; include things here
$end
$each module.scList.mainInc
$case path: String
		../src/main/scaka/${path}
$end
$each module.scList.mainSrc
$case path: String
		../src/main/scaka/${path}
$end
	)
$match if (module.scList.hasMain) module.links.toList.sorted else List()
$case Nil
$case links
	target_link_libraries(${module.scList.name} $<links.foldLeft("")(_ + " " + _)>)
$end


include_directories(../src/main/scaka)
$match module.scList.testSrc.isEmpty
$case true
$case false
$each module.scList.testSrc
	$case test: String
	# ${test.substring(0, test.lastIndexOf('.'))}
		add_executable(
			${module.scList.name}-${test.substring(0, test.lastIndexOf('.'))}
				../src/test/scaka/${test}

$each module.scList.mainInc
$case path: String
				../src/main/scaka/${path}
$end
$each module.scList.mainSrc
$case path: String
				../src/main/scaka/${path}
$end
		)
$match module.links.toList.sorted
$case Nil
$case links
		target_link_libraries(${module.scList.name}-${test.substring(0, test.lastIndexOf('.'))} $<links.foldLeft("")(_ + " " + _)>)
$end
	add_test(
		NAME ${module.scList.name}-${test.substring(0, test.lastIndexOf('.'))}
		COMMAND ${module.scList.name}-${test.substring(0, test.lastIndexOf('.'))}
		WORKING_DIRECTORY $<"${CMAKE_SOURCE_DIR}">
	)
$end
$end

