#import(peterlavalle.scad40.Model)
<%@ val modelScript: Model.Script %>
<%@ val nephrite: peterlavalle.scad40.Nephrite %>
struct ${modelScript.name} : public scad40::duk_object
{
	//
	//misc head stuff
	//

	/// the user's requested members
#for (member <- modelScript.members)
		${nephrite("\n\t\t", member)}
#end

	/// push this onto its stack
	void Push(void)
	{
		assert(false && "??? scad40 needs to provide this");
	}

	/// create an instance of a scripted class that extends this class
	static scad40::duk_ref<ChangeListener> New(duk_context* ctx, const char* subclass)
	{
		assert(false && "??? scad40 needs to provide this");
	}

	/// is whatever an instance of this class
	static bool Is(duk_context* ctx, duk_idx_t idx)
	{
		assert(false && "??? scad40 needs to provide this");
	}

	static scad40::duk_ref<${modelScript.name}> To(duk_context* ctx, duk_idx_t idx)
	{
		assert(false && "??? scad40 needs to provide this");
	}
};
